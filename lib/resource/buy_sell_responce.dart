///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class BuySellModelPatternsIndicators {
/*
{
  "bullish": [
    "bullishmarubozu"
  ],
  "bearish": [
    "bearishharami"
  ]
}
*/

  List<String?>? bullish;
  List<String?>? bearish;

  BuySellModelPatternsIndicators({
    this.bullish,
    this.bearish,
  });
  BuySellModelPatternsIndicators.fromJson(Map<String, dynamic> json) {
    if (json["bullish"] != null) {
      final v = json["bullish"];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      bullish = arr0;
    }
    if (json["bearish"] != null) {
      final v = json["bearish"];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      bearish = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (bullish != null) {
      final v = bullish;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data["bullish"] = arr0;
    }
    if (bearish != null) {
      final v = bearish;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data["bearish"] = arr0;
    }
    return data;
  }
}

class BuySellModelPatterns {
/*
{
  "predicted": "DB",
  "indicators": {
    "bullish": [
      "bullishmarubozu"
    ],
    "bearish": [
      "bearishharami"
    ]
  }
}
*/

  String? predicted;
  BuySellModelPatternsIndicators? indicators;

  BuySellModelPatterns({
    this.predicted,
    this.indicators,
  });
  BuySellModelPatterns.fromJson(Map<String, dynamic> json) {
    predicted = json["predicted"]?.toString();
    indicators = (json["indicators"] != null) ? BuySellModelPatternsIndicators.fromJson(json["indicators"]) : null;
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["predicted"] = predicted;
    if (indicators != null) {
      data["indicators"] = indicators!.toJson();
    }
    return data;
  }
}

class BuySellModel {
/*
{
  "success": true,
  "exchange": "bitfinex",
  "date": "2021-09-13T12:09:51.307Z",
  "price_btc": 0.00005412,
  "recommendation": "sell",
  "description": "The sentiment does not look good and we detected a double bottom pattern in the charts.\n        This can be an indication for a downtrend. We found 1 bullish pattern and 1 bearish pattern so our recommendation would be to sell",
  "error": "Can't get sentiment for ada. Coin is not supported yet.",
  "patterns": {
    "predicted": "DB",
    "indicators": {
      "bullish": [
        "bullishmarubozu"
      ],
      "bearish": [
        "bearishharami"
      ]
    }
  }
}
*/

  bool? success;
  String? exchange;
  String? date;
  double? priceBtc;
  String? recommendation;
  String? description;
  String? error;
  BuySellModelPatterns? patterns;

  BuySellModel({
    this.success,
    this.exchange,
    this.date,
    this.priceBtc,
    this.recommendation,
    this.description,
    this.error,
    this.patterns,
  });
  BuySellModel.fromJson(Map<String, dynamic> json) {
    success = json["success"];
    exchange = json["exchange"]?.toString();
    date = json["date"]?.toString();
    priceBtc = json["price_btc"]?.toDouble();
    recommendation = json["recommendation"]?.toString();
    description = json["description"]?.toString();
    error = json["error"]?.toString();
    patterns = (json["patterns"] != null) ? BuySellModelPatterns.fromJson(json["patterns"]) : null;
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["success"] = success;
    data["exchange"] = exchange;
    data["date"] = date;
    data["price_btc"] = priceBtc;
    data["recommendation"] = recommendation;
    data["description"] = description;
    data["error"] = error;
    if (patterns != null) {
      data["patterns"] = patterns!.toJson();
    }
    return data;
  }
}
